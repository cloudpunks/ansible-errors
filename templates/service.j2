[Unit]
Description=Errors

Wants=docker.service
After=docker.service

[Service]
Restart=always
RestartSec=10s
EnvironmentFile=/etc/environment

ExecStop=/bin/sh -c '/usr/bin/docker ps | /bin/grep %p 1> /dev/null && /usr/bin/docker stop %p || true'
ExecStartPre=/bin/sh -c '/usr/bin/docker ps | /bin/grep %p 1> /dev/null && /usr/bin/docker kill %p || true'
ExecStartPre=/bin/sh -c '/usr/bin/docker ps -a | /bin/grep %p 1> /dev/null && /usr/bin/docker rm %p || true'
ExecStart=/usr/bin/docker run --rm \
  --name %p \
  --hostname %p \
  --label traefik.enable=true \
{% if errors_network | default(False) %}
  --label traefik.docker.network={{ errors_network }} \
{% endif %}
  --label traefik.http.services.errors.loadbalancer.server.port=8080 \
  --label traefik.http.services.errors.loadbalancer.server.scheme=http \
  --label traefik.http.services.errors.loadbalancer.passhostheader=true \
  --label traefik.http.routers.errors.rule="PathPrefix(`/`)" \
  --label traefik.http.routers.errors.priority={{ errors_priority }} \
  --label traefik.http.routers.errors.service=errors@docker \
  --label traefik.http.routers.errors.entrypoints=https \
  --label traefik.http.routers.errors.tls=true \
{% if errors_cert_resolver | default(False) %}
  --label traefik.http.routers.errors.tls.certresolver={{ errors_cert_resolver }} \
{% endif %}
{% if errors_secure_middlewares | default(False) %}
  --label traefik.http.routers.errors.middlewares={{ errors_secure_middlewares | join(",") }} \
{% endif %}
  --label traefik.http.routers.errors-insecure.rule="PathPrefix(`/`)" \
  --label traefik.http.routers.errors-insecure.priority={{ errors_priority }} \
  --label traefik.http.routers.errors-insecure.service=errors@docker \
  --label traefik.http.routers.errors-insecure.entrypoints=http \
{% if errors_insecure_middlewares | default(False) %}
  --label traefik.http.routers.errors-insecure.middlewares={{ errors_insecure_middlewares | join(",") }} \
{% endif %}
  --env-file /etc/default/errors \
{% if errors_network | default(False) %}
  --network {{ errors_network }} \
{% endif %}
  --volume /etc/ssl:/etc/ssl:ro \
{% if errors_publish_server | default(False) %}
  --publish {{ errors_publish_server }}:8080 \
{% endif %}
  --health-cmd 'wget -q --spider http://localhost:8081/metrics' \
  --health-interval 10s \
  --health-retries 20 \
  --health-timeout 10s \
  {{ errors_image }}

[Install]
WantedBy=multi-user.target
